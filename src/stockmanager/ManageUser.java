/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stockmanager;

import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static stockmanager.details.*;

/**
 *
 * @author sanam
 */
public class ManageUser extends javax.swing.JInternalFrame {

    /**
     * Creates new form ManageUser
     */
    File myfile;
    String Oldname;
    public ManageUser() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPasswordField1 = new javax.swing.JPasswordField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Lucida Handwriting", 2, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage User");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Phone");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Gender");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Address");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("DOB");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Username");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Password");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Usertype");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Male");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Female");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose usertype", "Admin", "User" }));

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Phone", "Gender", "Address", "DOB", "Username", "Usertype"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jButton4.setText("Upload");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Find");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jPasswordField1)
                                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jTextField2))))
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane2))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(18, 18, Short.MAX_VALUE)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1)
                            .addComponent(jButton5))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addGap(26, 26, 26)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(jComboBox1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if(!check_validation())
        {
            return;
        }
//save
//img
String filename="";
if(myfile!=null)
{
    if(myfile.length()<1000000)
    {
        filename= new java.util.Date().getTime()+myfile.getName();
        FileInputStream inp=null;
        FileOutputStream op=null;
       int i;
        try
        {
            inp=new FileInputStream(myfile);
            op=new FileOutputStream(user_img_folder+filename);
             byte[] b=new byte[2048];
            try {
                while((i=inp.read(b))!=-1)
                {
                    op.write(b, 0, i);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "error in writing/reading" + e.getMessage());
            }
            
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane,"error in file "+ex.getMessage());
        } 
        finally
        {
            try {
                inp.close();
                op.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,"error in closing file : " +e.getMessage());
            }
        }
        
    }
    else
    {
        JOptionPane.showMessageDialog(rootPane,"image is too big");
        return;
    }
}
 else
        {
            filename=default_img_name; 
        }


//Details    
//name	phone	gender	address 	dob	username	password	usertype pic
    try
    {
       Connection myconn=  DriverManager.getConnection(myurl,myuser,mypass);
       try
       {
         String qry="insert into myusertable values(?,?,?,?,?,?,?,?,?)"  ;
           PreparedStatement st=myconn.prepareStatement(qry);
           st.setString(1,jTextField1.getText());
           st.setString(2,jTextField2.getText());
           if(jRadioButton1.isSelected())
           {
               st.setString(3,jRadioButton1.getText());
           }
           else
           {
               st.setString(3,jRadioButton2.getText());
           }
           st.setString(4,jTextArea1.getText());
           SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
           String d1=myformat.format(jDateChooser1.getDate());
           st.setString(5,d1);
            st.setString(6,jTextField3.getText());
             st.setString(7,jPasswordField1.getText());
              st.setString(8,jComboBox1.getSelectedItem().toString());
              st.setString(9,filename);
              
            int rowcount = st.executeUpdate();
             if(rowcount>0)
             {
                 JOptionPane.showMessageDialog(rootPane,"User Record Added Successfully");
                 clearpage();
             }
             else
             {
                  JOptionPane.showMessageDialog(rootPane,"Check all fields carefully");
             }
       }
       catch(Exception e)
       {
           File oldimage=new File(user_img_folder+filename);
           oldimage.delete();
            JOptionPane.showMessageDialog(rootPane,"Error In Insertion Query : "+e.getMessage());
       }
    }
    catch(Exception e) 
            {
              JOptionPane.showMessageDialog(rootPane,"Error In connection: "+e.getMessage());   
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
int ans = JOptionPane.showConfirmDialog(rootPane,"Are you sure to delete ? ");
        if(ans == JOptionPane.YES_OPTION)
        {
             try
    {
       Connection myconn=  DriverManager.getConnection(myurl,myuser,mypass);
       try
       {
           String qryd="select (pic)from myusertable where username=? ";
           PreparedStatement st = myconn.prepareStatement(qryd);
           st.setString(1,jTextField3.getText());
           ResultSet rst = st.executeQuery();
           String deloldimg;
           if(rst.next())
           {
               deloldimg=rst.getString("pic");
               File oldimg=new File(user_img_folder+deloldimg);
           oldimg.delete();
           }
           
       }
       catch(Exception e)
       {
           JOptionPane.showMessageDialog(rootPane,"error in deleting old pic: "+e.getMessage());
       }
    }
      catch(Exception e)
       {
           JOptionPane.showMessageDialog(rootPane,"error in connection to database to deleting old pic: "+e.getMessage());
       }     
        }        
//name	phone	gender	address	dob	username	password	usertype
        try
        {
            Connection myconn = DriverManager.getConnection(myurl,myuser,mypass);
            try
            {
                String qry="Delete from myusertable where username =?";
                PreparedStatement st= myconn.prepareStatement(qry);
                st.setString(1,jTextField3.getText());
                
                int rowcount=st.executeUpdate();
                if(rowcount>0)
                {
                    JOptionPane.showMessageDialog(rootPane,"Record deleted succesfully");
                    clearpage();
                }
                else
             {
                  JOptionPane.showMessageDialog(rootPane,"Check username");
             }
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in deletion query: "+e.getMessage());
            }
        }
         catch(Exception e)
         {
             JOptionPane.showMessageDialog(rootPane,"Errror in connection: "+e.getMessage());
         }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
if(!check_validation())
        {
            return;
        }
///image
        String filename;
        if(myfile!=null)///new image is selected to update
        {
        filename = new java.util.Date().getTime() + myfile.getName();//Date.getTime() added for unique file name.
        int i;
        FileInputStream rd = null;
        FileOutputStream outs = null; 
        try 
        { 
            rd = new FileInputStream(myfile);
            outs = new FileOutputStream(user_img_folder+filename);//writing the new file in 'Images' folder, in the project
            byte[] b = new byte[2048];
            while ((i = rd.read(b)) !=-1) 
            {
            outs.write(b, 0, i); //copying from pictures to empimages byte by byte
            } 
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "error" + e.getMessage());
        }
        finally 
        {
            try 
            {
                rd.close();
                outs.close();
            } 
            catch (Exception e) 
            {
            JOptionPane.showMessageDialog(rootPane, "error in closing file" + e.getMessage());
            } 
        }
             try
    {
       Connection myconn=  DriverManager.getConnection(myurl,myuser,mypass);
       try
       {
           String qryd="select (pic)from myusertable where username=? ";
           PreparedStatement st = myconn.prepareStatement(qryd);
           st.setString(1,jTextField3.getText());
           ResultSet rst = st.executeQuery();
           String deloldimg;
           if(rst.next())
           {
               deloldimg=rst.getString("pic");
               
               File oldimg=new File(user_img_folder+deloldimg);
               if(!oldimg.getName().equals(default_img_name)){
           oldimg.delete();}
           }
           
       }
       catch(Exception e)
       {
           JOptionPane.showMessageDialog(rootPane,"error in deleting old pic: "+e.getMessage());
       }
    }
      catch(Exception e)
       {
           JOptionPane.showMessageDialog(rootPane,"error in connection to database to deleting old pic: "+e.getMessage());
       }  } 
        else
        {
            filename=Oldname;
        }
//name	phone	gender	address	dob	username	password	usertype
    try
    {
       Connection myconn=  DriverManager.getConnection(myurl,myuser,mypass);
       try
       {
         String qry="update myusertable set name=?, phone=?, gender=?, "
                     + "address=?, dob=?, password=?, usertype =?, pic=? where username =?"  ;
           PreparedStatement st=myconn.prepareStatement(qry);
           st.setString(1,jTextField1.getText());
           st.setString(2,jTextField2.getText());
           if(jRadioButton1.isSelected())
           {
               st.setString(3,jRadioButton1.getText());
           }
           else
           {
               st.setString(1,jRadioButton2.getText());
           }
           st.setString(4,jTextArea1.getText());
           SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
           String d1=myformat.format(jDateChooser1.getDate());
           st.setString(5,d1);
            st.setString(9,jTextField3.getText());
             st.setString(6,jPasswordField1.getText());
              st.setString(7,jComboBox1.getSelectedItem().toString());
              st.setString(8,filename);
            int rowcount = st.executeUpdate();
             if(rowcount>0)
             {
                 JOptionPane.showMessageDialog(rootPane,"User Record Updated Successfully");
                 clearpage();
             }
             else
             {
                 File wimg=new File(user_img_folder+filename);
           wimg.delete();
                  JOptionPane.showMessageDialog(rootPane,"Check all fields carefully");
             }
       }
       catch(Exception e)
       {
            JOptionPane.showMessageDialog(rootPane,"Error In Updation Query : "+e.getMessage());
       }
    }
    catch(Exception e) 
            {
              JOptionPane.showMessageDialog(rootPane,"Error In connection: "+e.getMessage());   
            }
           
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //name	phone	gender	address	dob	username	password	usertype
        
        try
    {
       Connection myconn=  DriverManager.getConnection(myurl,myuser,mypass);
       try
       {
           String qry="select * from myusertable where name like ?";
           PreparedStatement st = myconn.prepareStatement(qry);
           st.setString(1,jTextField1.getText()+"%");
           clearpage();
           ResultSet rst= st.executeQuery();
           
           DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
           mymodel.setRowCount(0);
           if(rst.next())
           {
               do
               {
                   String c1=rst.getString("name");
                   String c2=rst.getString("phone");
                   String c3=rst.getString("gender");
                   String c4=rst.getString("address");
                   String c5=rst.getString("dob");
                   String c6=rst.getString("username");
                   String c7=rst.getString("usertype");
                   
                   Object rowdata[]={c1,c2,c3,c4,c5,c6,c7,c7};
                   mymodel.addRow(rowdata);
               }while(rst.next());
            }
           
            else
             {
                JOptionPane.showMessageDialog(rootPane,"No Record for this name"); 
                clearpage();
             }}
              catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error In Insertion Query : "+e.getMessage());
            }
       }
         catch(Exception e)
         {
             JOptionPane.showMessageDialog(rootPane,"Error In database connection : "+e.getMessage());
         }
           
       
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //name	phone	gender	address	dob	username	password	usertype
        String un=jTextField3.getText();
        fetchrecord(un);
    }//GEN-LAST:event_jButton6ActionPerformed
void fetchrecord(String un)
{
      try
    {
       Connection myconn=  DriverManager.getConnection(myurl,myuser,mypass);
       try
       {
           String qry="select * from myusertable where username=? ";
           PreparedStatement st = myconn.prepareStatement(qry);
           st.setString(1,un);
           ResultSet rst= st.executeQuery();
           
           DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
           mymodel.setRowCount(0);
           if(rst.next())
           {
               
                   String c1=rst.getString("name");
                   String c2=rst.getString("phone");
                   String c3=rst.getString("gender");
                   String c4=rst.getString("address");
                   Date c5=rst.getDate("dob");
                   String c6=rst.getString("username");
                   String c7=rst.getString("password");
                   String c8=rst.getString("usertype");
                   Oldname=rst.getString("pic");
                   jTextField1.setText(c1);
    jTextField2.setText(c2);
    jTextField3.setText(c6);
    jTextArea1.setText(c4);
    jPasswordField1.setText(c7);
    if(c3.equalsIgnoreCase("male"))
    {
        jRadioButton1.setSelected(true);
    }
    else
    {
        jRadioButton2.setSelected(true);
    }
               try
               {//myfile=new File(user_img_folder+Oldname);
                  Image simg= ImageIO.read(new File(user_img_folder+Oldname)).getScaledInstance(jLabel10.getWidth(),jLabel10.getHeight(),Image.SCALE_AREA_AVERAGING);
                  jLabel10.setIcon(new ImageIcon(simg));
               } 
               catch (Exception e)
               {
                   JOptionPane.showMessageDialog(rootPane,"can't set image: "+e.getMessage());
               }
    
    jDateChooser1.setDate(c5);
    jComboBox1.setSelectedItem(c8);
                   
                   Object rowdata[]={c1,c2,c3,c4,c5,c6,c8};
                   mymodel.addRow(rowdata);
               
            }
           
            else
             {
                JOptionPane.showMessageDialog(rootPane,"No Record for this name"); 
                clearpage();
             }}
              catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error In Query : "+e.getMessage());
            }
       }
         catch(Exception e)
         {
             JOptionPane.showMessageDialog(rootPane,"Error In database connection : "+e.getMessage());
         }

}
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        int col=5;
        fetchrecord(jTable1.getValueAt(row, col).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        JFileChooser myfilechooser=new JFileChooser();
        myfilechooser.setFileFilter(new FileFilter() {
            @Override
            public boolean accept(File f) {
                if(f.isDirectory())
                    return true;
                String extension=f.getName().substring(f.getName().lastIndexOf(".")+1);
                String allowed[]={"png","jpg","jpeg","gif","bmp"};
                for(String a : allowed)
                {
                    if(a.equalsIgnoreCase(extension))
                        return true;
                    else
                        return false;
                }
                return false;
            }

            @Override
            public String getDescription() {
                return "All picture files";
            }
        });
        if(myfilechooser.showOpenDialog(rootPane)==JFileChooser.APPROVE_OPTION);
        {
            myfile=myfilechooser.getSelectedFile();
            try
        {
            Image simg=ImageIO.read(new File(myfile.getAbsolutePath())).getScaledInstance(jLabel10.getWidth(),jLabel10.getHeight(),Image.SCALE_AREA_AVERAGING);
            //Image simg = ImageIO.read( new File(myfile.getAbsolutePath())).getScaledInstance( jLabel10.getWidth(), jLabel10.getHeight(), Image.SCALE_AREA_AVERAGING);
            jLabel10.setIcon(new ImageIcon(simg));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Cannot read image");
        }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

   
Boolean check_validation()
{
    if(jTextField1.getText().length()<3)
    {
        JOptionPane.showMessageDialog(rootPane, "Please enter proper name");
        return false;
    }
    else if(jTextField2.getText().length()<7 || jTextField2.getText().length()>15)
    { 
        JOptionPane.showMessageDialog(rootPane, "Please enter Valid phone");
        return false;
    }
//    else if(jTextField3.getText().length()<6 || jTextField3.getText().contains("@")==false)
//    { 
//        JOptionPane.showMessageDialog(rootPane, "Please enter proper email");
//        return false;
//    }
    else if(jRadioButton1.isSelected()==false && jRadioButton2.isSelected()==false)
    {
        JOptionPane.showMessageDialog(rootPane, "Please choose gender");
        return false;
    }
    else if(jComboBox1.getSelectedIndex()==0)
    {
        JOptionPane.showMessageDialog(rootPane, "Please choose user type");
        return false;
    }
    return true;
}
  void clearpage()
{
    jTextField1.setText(null);
    jTextField2.setText(null);
    jTextField3.setText(null);
    jTextArea1.setText(null);
    jPasswordField1.setText(null);
    buttonGroup1.clearSelection();
    jDateChooser1.setDate(null);
    jComboBox1.setSelectedIndex(0);
    jLabel10.setIcon(null);
    
}
    
 
       

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}




